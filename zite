#!/bin/bash
# Zite: static website generator in one bash script!
# Usage:
# zite new my-website
# zite add articles my-article-name
# zite build
# 
# Don't forget to set the theme and name variables!

read_config() {
  THEME=$(grep theme config.yaml | sed 's/.*"\(.*\)".*/\1/')
  NAME=$(grep name config.yaml | sed 's/.*"\(.*\)".*/\1/')
  DATEFORMAT=$(grep date config.yaml | sed 's/.*"\(.*\)".*/\1/')
  printf "%s|%s|%s" "$THEME" "$NAME" "$DATEFORMAT"
}

reset_website() {
  # reset the website directory
  if [ -d "website" ]; then
      rm -r "website"
  fi
  mkdir -p website/imgs website/styles website/fonts
  # copy styles, images, and fonts from theme
  for dir in "imgs" "styles" "fonts"; do
    if [ -d "themes/$THEME/$dir" ]; then
      cp -r "themes/$THEME/$dir"/* "website/$dir"
    fi
  done
}

read_content_categories() {
    local categories=()
    for category_dir in content/*; do
        if [ -d "$category_dir" ]; then
            category_name=$(basename "$category_dir")
            categories+=("$category_name")
        fi
    done
    printf "%s|" "${categories[@]}"
}

copy_category_images() {
  IFS=$'|' read -ra categories <<< "$1"
  for category in "${categories[@]}"; do
    if [ -d "content/$category/imgs" ]; then # if the imgs directory exists
      if [ -n "$(find "content/$category/imgs" -type f)" ]; then # and it's not empty
        cp "content/$category/imgs/"* website/imgs/
      fi
    fi
  done
}

create_category_lists_and_article_html() {
  IFS=$'|' read -ra categories <<< "$1"
  for category in "${categories[@]}"; do
    title=$(tr '[:lower:]' '[:upper:]' <<< "$category")
    category_md="<ul>"
    for article in content/"$category"/*; do
      if [ -f "$article" ]; then
        article=$(sed 's/.*\///;s/\.md$//' <<< "$article")
        article_title=$(grep title content/"$category"/"$article".md | sed 's/.*"\(.*\)".*/\1/')
        category_md+="<li><a href=\"$article.html\">$article_title</a></li>\n"
        sed -e 's/# /## /' content/"$category"/"$article".md | pandoc --template=themes/"$THEME"/templates/page-template.html -o website/"$article".html
      fi
    done
    category_md+="</ul>"
    if [ -e themes/"$2"/templates/"$category"-template.html ]; then
      pandoc --template=themes/"$THEME"/templates/"$category"-template.html --metadata title="$title" -o website/"$category".html <<< "$category_md"
    else
      pandoc --template=themes/"$THEME"/templates/list-template.html --metadata title="$title" -o website/"$category".html <<< "$category_md"
    fi
  done
}

create_homepage() {
  IFS=$'|' read -ra categories <<< "$1"
  home_md="<ul>\n"
  for category in "${categories[@]}"; do
    title=$(tr '[:lower:]' '[:upper:]' <<< "$category")
    home_md+="<li><a href=\"$category.html\">$title</a></li>\n"
  done
  home_md+="</ul>"
  pandoc --template=themes/"$THEME"/templates/home-template.html --metadata title="$2" -o website/index.html <<< "$home_md"
}

create_base_directory_structure() {
  DIRNAME=$1
  if [ ! -d "$DIRNAME" ]; then
    mkdir "$DIRNAME" "$DIRNAME"/content "$DIRNAME"/content/articles "$DIRNAME"/themes
  fi
}

create_required_files() {
  DATEFORMAT="+%Y-%m-%d"
  DIRNAME="$1"
  printf -- "---\ntitle: \"Welcome to Zite!\"\ndate: %s\n---\n\nWelcome to Zite, the simple static website generator!\n\nCheck out the documentation [on the project's github page](github.com/rodrigueslazaro/zite)\n" "$(date "$DATEFORMAT")" > "$DIRNAME"/content/articles/intro.md
  printf 'theme: "lazite"\nname: "Zite Website"\ndate: "%s"' "$DATEFORMAT" > "$DIRNAME"/config.yaml
  printf "Congratulations, you've just created a Zite website!\n"
}

case $1 in
  build)
    config_variables=$(read_config)
    IFS='|' read -r THEME NAME DATEFORMAT <<< "$config_variables"
    reset_website
    categories_read=$(read_content_categories)
    copy_category_images "$categories_read"
    create_category_lists_and_article_html "$categories_read" "$THEME"
    create_homepage "$categories_read" "$NAME"
    ;;
  new)
    DIRNAME="$2"
    create_base_directory_structure "$DIRNAME"
    create_required_files "$DIRNAME"
    if [ -z "$(ls -A "$DIRNAME"/themes)" ]; then
      printf "It appears you do not have a theme installed, please get the example theme from https://github.com/rodrigueslazaro/lazite-theme and place it inside the themes directory!\n"
    fi
    ;;
  add)
    config_variables=$(read_config)
    IFS='|' read -r THEME NAME DATEFORMAT <<< "$config_variables"
    CATNAME="$2" # category name
    NEWNAME="$3" # name of new md file
    NEWTITLE=$(sed -E 's/(^|[-_ ])([a-z])/\1\u\2/g; s/-/ /g' <<< "$NEWNAME")
    printf -- "---\ntitle: \"%s\"\ndate: %s\n---\n\n" "$NEWTITLE" "$(date "$DATEFORMAT")" > content/"$CATNAME"/"$NEWNAME".md
    ;;
  *)
    printf "ERROR: Unknown command, please refer to the documentaion for correct usage."
esac
